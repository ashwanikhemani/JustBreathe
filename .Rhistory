allData3 <- do.call(rbind, allData2)
listNames <- c(colnames(allData3$County))
listNames <- unique(allData3$County)
listNames <- (allData3$County)
View(allData3)
View(allData3)
View(allData3)
View(allData2)
View(allData2)
justOneYearReactive <- reactive({subset(allData3, year(allData3$Year) == input$Year)})
justOneYear <- justOneYearReactive()
view(alldata3)
View(allData2)
listNames <- unique(allData2$County)
names(allData2$County)
names(allData3$County)
str(allData3)
summary(allData3)
dim(allData3)
2018  <- subset(allData3, year(allData$Year) == 2018)
year_2018  <- subset(allData3, year(allData$Year) == 2018)
year_2018  <- subset(allData3, year(allData3$Year) == 2018)
allData3$State.County.Year.Days.with.AQI.Good.Days.Moderate.Days.Unhealthy.for.Sensitive.Groups.Days.Unhealthy.Days.Very.Unhealthy.Days.Hazardous.Days.Max.AQI.90th.Percentile.AQI.Median.AQI.Days.CO.Days.NO2.Days.Ozone.Days.SO2.Days.PM2.5.Days.PM10
allData3$Year
temp = list.files(pattern="*.tsv")
allData2 <- lapply(temp, read.delim)
allData3 <- do.call(rbind, allData2)
View(allData3)
View(allData3)
View(allData2)
View(allData2)
View(allData3)
View(allData3)
temp = list.files(pattern="*.csv")
allData2 <- lapply(temp, read.delim)
allData3 <- do.call(rbind, allData2)
temp = list.files(pattern="*.tsv")
allData2 <- lapply(temp, read.csv)
allData3 <- do.call(rbind, allData2)
View(allData3)
temp = list.files(pattern="*.tsv")
allData2 <- lapply(temp, read.delm)
allData3 <- do.call(rbind, allData2)
temp = list.files(pattern="*.tsv")
allData2 <- lapply(temp, read.delim)
allData3 <- do.call(rbind, allData2)
View(allData3)
View(allData3)
temp = list.files(pattern="*.csv")
allData2 <- lapply(temp, read.delim)
allData3 <- do.call(rbind, allData2)
> allData2 <- lapply(temp, read.)
files = list.files(pattern="*.csv")
# First apply read.csv, then rbind
myfiles = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
View(myfiles)
View(myfiles)
files = list.files(pattern="*.csv")
allData3 = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
listNames <- unique(allData3$County)
listNames <- unique(allData3$County)
view(listNames)
counties <- (allData3$County)
runApp()
runApp()
getwd()
dir()
runApp()
runApp()
runApp()
shiny::runApp()
files = list.files(pattern="*.csv")
allData = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
# Create the menu items to select the different years and the different county
listCounties <- unique(allData$County)
years<-c(1980:2018)
numGDays <- allData$Good.Days
numMDays <- allData$Moderate.Days
numUhSDays <- allData$Unhealthy.for.Sensitive.Groups.Days
numUhDays <- allData$Unhealthy.Days
numVUhDays <- allData$Very.Unhealthy.Days
numHDays <- allData$Hazardous.Days
numAQIDays <- allData$Days.with.AQI
perGDays <- numGDays/numAQIDays
perMDays <- numMDays/numAQIDays
perUhSDays <- numUhSDays/numAQIDays
perUhDays <- numUhDays/numAQIDays
perVUhDays <- numVUhDays/numAQIDays
perHDays <- numHDays/numAQIDays
df_percentage <- data.frame(group = c( "good" , "moderate" , "unhealthy for sensitive", "unhealthy", "very unhealthy" ,"hazardous"),
value = c(perGDays,perMDays, perUhSDays, perUhDays, perVUhDays,perHDays)
)
View(evl2006)
View(evl2006)
View(df_percentage)
View(df_percentage)
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County="Cook"))
sapply(allData, class)
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook"))
View(cook_county)
View(cook_county)
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
View(cook_county)
View(cook_county)
numGDays <- cook_county$Good.Days
numMDays <- cook_county$Moderate.Days
numUhSDays <- cook_county$Unhealthy.for.Sensitive.Groups.Days
numUhDays <- cook_county$Unhealthy.Days
numVUhDays <- cook_county$Very.Unhealthy.Days
numHDays <- cook_county$Hazardous.Days
numAQIDays <- cook_county$Days.with.AQI
perGDays <- numGDays/numAQIDays
perMDays <- numMDays/numAQIDays
perUhSDays <- numUhSDays/numAQIDays
perUhDays <- numUhDays/numAQIDays
perVUhDays <- numVUhDays/numAQIDays
perHDays <- numHDays/numAQIDays
df_percentage <- data.frame(group = c( "good" , "moderate" , "unhealthy for sensitive", "unhealthy", "very unhealthy" ,"hazardous"),
value = c(perGDays,perMDays, perUhSDays, perUhDays, perVUhDays,perHDays)
)
View(df_percentage)
View(df_percentage)
pie(df_percentage$value, labels = df_percentage$group, radius = 0.8)
year_2018 <- subset(allData, (allData$Year) == 2018)
View(year_2018)
View(year_2018)
runApp()
runApp()
runApp()
df[,"main_pollutant"] <- names(df)[which.min(apply(df[,13:18],1,max))]
allData[,"main_pollutant"] <- names(allData)[which.min(apply(allData[,13:18],1,max))]
View(allData)
View(allData)
pollutants <- allData[, 13:18]
View(pollutants)
View(pollutants)
pollutants <- allData[, 14:19]
allData[, "main_pollutant"] <- apply(allData[, 14:19], 1, max)
View(allData)
View(allData)
allData[,"main_pollutant"] <- names(allData)[which.max(apply(allData[,13:18],1,max))]
View(allData)
View(allData)
allData[,"main_pollutant"] <- names(allData)[which.max(apply(allData[,14:19],1,max))]
View(allData)
View(allData)
allData[,"main_pollutant"] <- names(allData)[which.max(apply(allData[,14:19],2,max))]
View(allData)
View(allData)
allData[,"main_pollutant"] <- names(allData)[which.max(apply(allData[,13:18],2,max))]
View(allData)
View(allData)
allData[, "main_pollutant"] <- apply(allData[, 14:19], 2, max)
allData[, "main_pollutant"] <- apply(allData[, 14:19], 1, max)
View(allData)
View(allData)
allData[, "main_pollutant"] <- colnames(allData)[apply(allData[,14:19],1,which.max)]
View(allData)
View(allData)
allData[, "main_pollutant"] <- colnames(allData[14:19])[apply(allData[,14:19],1,which.max)]
View(allData)
View(allData)
co <-allData[allData['main_pollutant']='Days.CO']
co <-allData[[allData['main_pollutant'='Days.CO']]
co <-allData[[allData['main_pollutant'='Days.CO']]]
co <- allData[[allData['main_pollutant'='Days.CO']]]
co <- allData[[allData['main_pollutant'="Days.CO"]]]
co <- allData[allData['main_pollutant'="Days.CO"]
]
mPCO = nrow(allData[allData$main_pollutant == "Days.CO"])
mPCO <- nrow(allData[allData$main_pollutant == "Days.CO"])
View(allData)
View(allData)
allData$main_pollutant == "Days.CO"]
allData[allData$main_pollutant == "Days.CO"]
nrow(allData[allData$main_pollutant == "Days.CO"])
mPCO <- nrow(allData[allData$main_pollutant == "Days.CO",])
mPCO <- nrow(allData[allData$main_pollutant == "Days.SO2",])
allData[, "main_pollutant"] <- colnames(allData[14:19])[apply(allData[,14:19],1,which.max)]
View(allData)
runApp()
runApp()
runApp()
runApp()
runApp()
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- nrow(newCounty[newCounty$main_pollutant == "Days.CO"])
mPNO2 <- nrow(newCounty[newCounty$main_pollutant == "Days.NO2"])
mPOzone <- nrow(newCounty[newCounty$main_pollutant == "Days.Ozone"])
mPSO2 <- nrow(newCounty[newCounty$main_pollutant == "Days.SO2"])
mP_PM2.5<- nrow(newCounty[newCounty$main_pollutant == "Days.PM2.5"])
mP_PM10 <- nrow(newCounty[newCounty$main_pollutant == "Days.PM2.10"])
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- nrow(cook_county[cook_county$main_pollutant == "Days.CO"])
mPNO2 <- nrow(cook_county[cook_county$main_pollutant == "Days.NO2"])
mPOzone <- nrow(cook_county[cook_county$main_pollutant == "Days.Ozone"])
mPSO2 <- nrow(cook_county[cook_county$main_pollutant == "Days.SO2"])
mP_PM2.5<- nrow(cook_county[cook_county$main_pollutant == "Days.PM2.5"])
mP_PM10 <- nrow(cook_county[cook_county$main_pollutant == "Days.PM2.10"])
cook_county
View(cook_county)
runApp()
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM2.5<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
cook_county <- subset(allData, (allData$Year) == 1980 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM2.5<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM2.5/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM25/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
df_per_main_pollutant <- data.frame(group = c( "CO" , "NO2" , "Ozone", "SO2", "PM2.5" ,"PM10"),
value = c(mPCO,mPNO2, mPOzone, mPSO2, mP_PM2.5,mP_PM10))
runApp()
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM25/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
df_per_main_pollutant <- data.frame(group = c( "CO" , "NO2" , "Ozone", "SO2", "PM2.5" ,"PM10"),
value = c(mPCO,mPNO2, mPOzone, mPSO2, mP_PM2.5,mP_PM10))
mPNO2 <- newCounty$Days.NO2
files = list.files(pattern="*.csv")
allData = do.call(rbind, lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE)))
cook_county <- subset(allData, (allData$Year) == 2018 & (allData$County=="Cook") & allData$State=="Illinois")
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
mPCO <- cook_county$Days.CO
> mPNO2 <- cook_county$Days.NO2
> mPOzone <- cook_county$Days.Ozone
> mPSO2 <- cook_county$Days.SO2
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM2.10
mP_PM10 <- cook_county$Days.PM10
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM10
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM25/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM10
numAQIDays <- newCounty$Days.with.AQI
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM25/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM25<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM10
numAQIDays <- cook_county$Days.with.AQI
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM25/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
df_per_main_pollutant <- data.frame(group = c( "CO" , "NO2" , "Ozone", "SO2", "PM2.5" ,"PM10"),
value = c(mPCO,mPNO2, mPOzone, mPSO2, mP_PM2.5,mP_PM10))
mPCO <- cook_county$Days.CO
mPNO2 <- cook_county$Days.NO2
mPOzone <- cook_county$Days.Ozone
mPSO2 <- cook_county$Days.SO2
mP_PM2.5<- cook_county$Days.PM2.5
mP_PM10 <- cook_county$Days.PM10
numAQIDays <- cook_county$Days.with.AQI
per_mPCO = mPCO/numAQIDays
per_mPNO2 = mPNO2/numAQIDays
per_mPOzone = mPOzone/numAQIDays
per_mPSO2 = mPSO2/numAQIDays
per_mP_PM2.5 = mP_PM2.5/numAQIDays
per_mP_PM10 = mP_PM10/numAQIDays
df_per_main_pollutant <- data.frame(group = c( "CO" , "NO2" , "Ozone", "SO2", "PM2.5" ,"PM10"),
value = c(mPCO,mPNO2, mPOzone, mPSO2, mP_PM2.5,mP_PM10))
)
pie(df_per_main_pollutant$value, labels = df_per_main_pollutant$group, radius = 0.8)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
function(input, output) {
# Filter data based on selections
output$table <- DT::renderDataTable(DT::datatable({
data <- mpg
if (input$man != "All") {
data <- data[data$manufacturer == input$man,]
}
if (input$cyl != "All") {
data <- data[data$cyl == input$cyl,]
}
if (input$trans != "All") {
data <- data[data$trans == input$trans,]
}
data
}))
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c_i <- unique(allData[allData$State=="Illinois"]['County'])
c_i <- unique(allData[allData$State=="Illinois"]["County"])
c_i <- unique(allData[allData$State=="Illinois"])
c_i <- unique(allData[allData$State=="Illinois"])
c_i <- unique(allData[allData$State=="Illinois"]['County'])
View(allData)
View(allData)
c_i <- unique(allData[allData$State=="Illinois"])
c_i <- unique(allData[allData$State=="Illinois",]['County'])
View(c_i)
View(c_i)
c_i <- unique(allData[allData$State=="Illinois",])
runApp()
runApp()
runApp()
listStates <- unique(allData$State)
listStates <- unique(allData$State)
listStates <- unique(allData$State)
print(listStates)
year_2018 <- subset(allData, (allData$Year) == 2018)
listStates <- unique(year_2018$State)
print(listStates)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
county <- subset(allData, (allData$State==input$State & (allData$County== input$County)))
county <- subset(allData, (allData$State=="Illinois" & (allData$County== "Cook")))
View(county)
View(county)
runApp()
ggplot(data=County$Max.AQI, aes(x=County$Year, y=County$Max.AQI))+
geom_line()
ggplot(data=county$Max.AQI, aes(x=county$Year, y=county$Max.AQI))+
geom_line()
ggplot(data=county, aes(x=county$Year, y=county$Max.AQI))+
geom_line()
runApp()
runApp()
runApp()
runApp()
runApp()
aqs_sites <- read.csv(file="aqs_sites.csv", header=TRUE, sep=",")
View(aqs_sites)
View(aqs_sites)
runApp()
runApp()
map <- leaflet()
map <- addTiles(map)
newcounty <- subset(aqs_sites, aqs_sites$County== "" & aqs_sites$State==input$State)
map <- setView(map, lng = newcounty$Longitude, lat = newcounty$Latitude, zoom = 18)
map <- addMarkers(map, lng = newcounty$Longitude, lat = newcounty$Latitude, popup = input$County)
aqs_sites <- read.csv(file="map/aqs_sites.csv", header=TRUE, sep=",")
View(aqs_sites)
View(aqs_sites)
runApp()
runApp()
newcounty <- subset(aqs_sites, aqs_sites$County.Name== "Cook" & aqs_sites$State.Name=="Illinois")
map <- setView(map, lng = newcounty$Longitude, lat = newcounty$Latitude, zoom = 18)
map <- addMarkers(map, lng = newcounty$Longitude, lat = newcounty$Latitude, popup = input$County)
View(newcounty)
View(newcounty)
newCounty[0]
newcounty[0]
newcounty[0:]
newcounty[0,:]
newcounty[1,:]
newcounty[1,]
newcounty <- subset(aqs_sites, aqs_sites$County.Name== "Cook" & aqs_sites$State.Name=="Illinois")
map <- setView(map, lng = newcounty[1,]$Longitude, lat = newcounty[1,]$Latitude, zoom = 18)
map <- addMarkers(map, lng = newcounty[1,]$Longitude, lat = newcounty[1,]$Latitude, popup = "Cook")
map
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
